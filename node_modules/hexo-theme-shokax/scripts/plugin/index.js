"use strict";
/*!
  index.js in next-theme/hexo-theme-next by next-theme
  under GNU AFFERO GENERAL PUBLIC LICENSE v3.0 OR LATER
  https://github.com/next-theme/hexo-theme-next/blob/master/LICENSE.md
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const injects_1 = __importDefault(require("./lib/injects"));
const package_json_1 = require("../../package.json");
const fs = __importStar(require("node:fs"));
hexo.on('generateBefore', () => {
    // 加载`theme_injects`过滤器
    (0, injects_1.default)(hexo);
    fs.rmSync('./shokaxTemp', { force: true, recursive: true });
    if (fs.existsSync('request.lock')) {
        fs.unlinkSync('request.lock');
    }
    if (fs.existsSync('requested.lock')) {
        fs.unlinkSync('requested.lock');
    }
});
hexo.on('generateAfter', () => {
    // 检查版本更新
    fetch('https://registry.npmmirror.com/hexo-theme-shokax').then((res) => {
        res.json().then((resp) => {
            try {
                const latest = resp['dist-tags'].latest;
                const current = package_json_1.version.split('.');
                let isOutdated = false;
                for (let i = 0; i < Math.max(latest.length, current.length); i++) {
                    if (!current[i] || latest[i] > current[i]) {
                        isOutdated = true;
                        break;
                    }
                    if (latest[i] < current[i]) {
                        break;
                    }
                }
                if (isOutdated) {
                    hexo.log.warn(`Your theme ShokaX is outdated. Current version: v${current.join('.')}, latest version: v${latest.join('.')}`);
                    hexo.log.warn('Visit https://github.com/theme-shoka-x/hexo-theme-shokaX/releases for more information.');
                }
            }
            catch (e) {
                hexo.log.warn('Failed to detect version info. Error message:');
                hexo.log.warn(e);
            }
        }).catch((e) => {
            hexo.log.warn('Failed to detect version info. Error message:');
            hexo.log.warn(e);
        });
    });
});
