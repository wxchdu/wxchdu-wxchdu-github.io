import attachLink from "./proto/attachLink";
import handleResponse from "./proto/handleResponse";
import sendRequest from "./sendRequest";
import { DefaultSwitches, PjaxOptions, SwitchFunction } from "./types";
declare class Pjax {
    state: {
        numPendingSwitches: number;
        href: string | null;
        options: PjaxOptions | null;
    };
    options: PjaxOptions;
    private maxUid;
    private lastUid;
    private request;
    attachLink: typeof attachLink;
    doRequest: typeof sendRequest;
    handleResponse: typeof handleResponse;
    static switches: {
        [key in DefaultSwitches]: SwitchFunction;
    };
    constructor(options?: Partial<PjaxOptions>);
    getElements(el: Element | Document): NodeListOf<Element>;
    parseDOM(el: Element | Document): void;
    refresh(el: Element): void;
    reload(): void;
    forEachSelectors(cb: (el: Element) => void, context: Pjax, DOMcontext?: Element | Document): any;
    switchSelectors(selectors: string[], fromEl: Element | Document, toEl: Element | Document, options: PjaxOptions): void;
    latestChance(href: string): void;
    onSwitch(): void;
    loadContent(html: string, options: PjaxOptions): void;
    loadUrl(href: string, options?: PjaxOptions): void;
    afterAllSwitches(): void;
    abortRequest(request: XMLHttpRequest | null): void;
}
export default Pjax;
